# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import requests
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QImage, QPixmap
from PyQt5.QtWidgets import QWidget, QLabel, QMessageBox

from getqrcode import search
from proxy import openproxy, closeproxy, startmimt


class Ui_wechatqrcode(object):
    def setupUi(self, wechatqrcode):
        wechatqrcode.setObjectName("wechatqrcode")
        wechatqrcode.resize(1200, 713)
        wechatqrcode.setAutoFillBackground(False)
        self.centralwidget = QtWidgets.QWidget(wechatqrcode)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout_2.addWidget(self.pushButton_2, 3, 1, 1, 1)
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setObjectName("pushButton_3")
        self.gridLayout_2.addWidget(self.pushButton_3, 2, 1, 1, 1)
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setObjectName("pushButton_4")
        self.gridLayout_2.addWidget(self.pushButton_4, 4, 1, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setMinimumSize(QtCore.QSize(200, 50))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.pushButton.setFont(font)
        self.pushButton.setIconSize(QtCore.QSize(32, 32))
        self.pushButton.setObjectName("pushButton")
        self.gridLayout_2.addWidget(self.pushButton, 0, 1, 1, 1)
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 803, 592))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.gridLayout_2.addWidget(self.scrollArea, 2, 0, 5, 1)
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setMinimumSize(QtCore.QSize(0, 50))
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout_2.addWidget(self.lineEdit, 0, 0, 1, 1)
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setMaximumSize(QtCore.QSize(200, 600))
        self.textBrowser.setObjectName("textBrowser")
        self.gridLayout_2.addWidget(self.textBrowser, 5, 1, 1, 1)
        wechatqrcode.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(wechatqrcode)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1029, 23))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        wechatqrcode.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(wechatqrcode)
        self.statusbar.setObjectName("statusbar")
        wechatqrcode.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menu.menuAction())

        self.retranslateUi(wechatqrcode)
        self.buttonconnect()
        QtCore.QMetaObject.connectSlotsByName(wechatqrcode)

    def retranslateUi(self, wechatqrcode):
        _translate = QtCore.QCoreApplication.translate
        wechatqrcode.setWindowTitle(_translate("wechatqrcode", "MainWindow"))
        self.pushButton_2.setText(_translate("wechatqrcode", "抓取微信口令"))
        self.pushButton_3.setText(_translate("wechatqrcode", "开启代理"))
        self.pushButton_4.setText(_translate("wechatqrcode", "关闭代理"))
        self.pushButton.setToolTip(_translate("wechatqrcode", "输入公众号链接点击获取"))
        self.pushButton.setText(_translate("wechatqrcode", "获取二维码"))
        self.textBrowser.setHtml(_translate("wechatqrcode", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">使用方法：</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">先开启代理，在微信内点开一篇公众号文章，然后抓取微信口令，然后关闭代理即可。</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">在搜索框输入公众号链接就可以获取二维码图片,内容较多请等待！</p></body></html>"))
        self.menu.setTitle(_translate("wechatqrcode", "菜单"))

    def buttonconnect(self):
        '''
        按键绑定
        :return:
        '''
        self.pushButton.clicked.connect(self.mysearch)
        self.pushButton_2.clicked.connect(startmimt)
        self.pushButton_3.clicked.connect(openproxy)
        self.pushButton_4.clicked.connect(closeproxy)

    def mysearch(self):
        newlist=search(self.lineEdit.text(), self.centralwidget, self)
        self.getcode(newlist)


    def getcode( self,list):
        self.filewidget = QWidget()
        self.filewidget.setMinimumSize(350, 3000)
        row = len(list) / 4
        positions = [(i, j) for i in range(4) for j in range(round(row))]  # 规定每行每列多少数据  第一个是行 第二个是列
        for position, picurl in zip(positions, list):  # 在for里面新建qlabel 这样每个label才会是独立的
            myimg = QLabel(self.filewidget)
            myimg.setScaledContents(True)
            res = requests.get(picurl)
            print(position,picurl)
            img = QImage.fromData(res.content)
            myimg.setPixmap(QPixmap.fromImage(img))
            myimg.setFixedSize(200, 200)
            myimg.move(250 * position[0], 250 * position[1])
        self.scrollArea.setWidget(self.filewidget)


